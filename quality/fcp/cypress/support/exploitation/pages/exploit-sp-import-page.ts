import { ChainableElement } from '../../common/types';

export default class ExploitSpImportPage {
  getImportCsvFile(): ChainableElement {
    return cy.get('[name="csvFilename"]');
  }

  getSpImportButton(): ChainableElement {
    return cy.contains('button', 'Importer les FS en base');
  }

  getReportDownloadButton(): ChainableElement {
    return cy.get('[data-testid="download-report"]');
  }

  getFileSelectionError(): ChainableElement {
    return cy.get('#alert_error');
  }

  getSuccessBanner(): ChainableElement {
    return cy.get('#successBanner');
  }

  getErrorBanner(): ChainableElement {
    return cy.get('#errorBanner');
  }

  checkIsVisible(): void {
    this.getSpImportButton().should('be.visible');
  }

  checkIsFileSelectionErrorDisplayed(message = ''): void {
    this.getFileSelectionError().should('be.visible');
    if (message) {
      this.getFileSelectionError().should('contain.text', message);
    }
  }

  checkIsConfirmationDisplayed(): void {
    this.getSuccessBanner().should('be.visible');
  }

  checkIsImportErrorDisplayed(message = ''): void {
    this.getErrorBanner().should('be.visible');
    if (message) {
      this.getErrorBanner().should('contain.text', message);
    }
  }

  checkFileLineCount(count: number): void {
    cy.get('[data-testid="file-line-count"]').should('have.text', count);
  }

  checkReportLineCount(count: number): void {
    cy.get('[data-testid="report-line-count"]').should('have.text', count);
  }

  checkCreatedSpCount(count: number): void {
    cy.get('[data-testid="created-sp-count"]').should('have.text', count);
  }

  checkErroredSpCount(count: number): void {
    cy.get('[data-testid="errored-sp-count"]').should('have.text', count);
  }

  selectFile(filePath: string): void {
    this.getImportCsvFile().selectFile(filePath, { force: true });
  }

  validateSpImport(): void {
    this.getSpImportButton().click();
  }

  downloadSpImportReport(_fileName: string): void {
    this.getReportDownloadButton().click();
  }
}
